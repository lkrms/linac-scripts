#!/bin/bash

function service_get_property() {

    local SERVICE_NAME PROPERTY_NAME PROPS PROP VAL

    SERVICE_NAME="$1"
    PROPERTY_NAME="$2"
    shift 2

    [ -n "$SERVICE_NAME" ] || die "No service name"
    [ -n "$PROPERTY_NAME" ] || die "No property name"

    PROPS="$(systemctl "$@" show --property="$PROPERTY_NAME" "$SERVICE_NAME.service")" || die
    IFS="=" read -r PROP VAL <<<"$PROPS" || true
    [ "$PROP" = "$PROPERTY_NAME" ] || die "Couldn't retrieve property $PROPERTY_NAME for service $SERVICE_NAME"

    echo "$VAL"

}

function service_property_is() {

    local SERVICE_NAME PROPERTY_NAME EXPECTED_VALUE VALUE

    SERVICE_NAME="$1"
    PROPERTY_NAME="$2"
    EXPECTED_VALUE="$3"
    shift 3

    VALUE="$(service_get_property "$SERVICE_NAME" "$PROPERTY_NAME" "$@")" || die

    [ "$VALUE" = "$EXPECTED_VALUE" ]

}

function service_exists() {

    local SERVICE_NAME

    SERVICE_NAME="$1"
    shift

    ! service_property_is "$SERVICE_NAME" "LoadState" "not-found" "$@"

}

function service_running() {

    local SERVICE_NAME

    SERVICE_NAME="$1"
    shift

    [ -n "$SERVICE_NAME" ] || die "No service name"

    systemctl "$@" --quiet is-active "$SERVICE_NAME.service"

}

function system_service_exists() {

    service_exists "$1"

}

function user_service_exists() {

    service_exists "$1" --user

}

function system_service_running() {

    service_running "$1"

}

function user_service_running() {

    service_running "$1" --user

}

function freedesktop_disable_autostart() {

    [ -n "${HOME:-}" ] || return

    if [ ! -e "$HOME/.config/autostart/$1.desktop" ]; then

        mkdir -p "$HOME/.config/autostart" || die

        cat <<EOF >"$HOME/.config/autostart/$1.desktop"
[Desktop Entry]
Hidden=true
EOF

    fi

}

function disable_update_motd() {

    local DISABLE FILE

    DISABLE=(
        10-help-text
        50-motd-news
        80-esm
        80-livepatch
        90-updates-available
        91-release-upgrade
        95-hwe-eol
    )

    [ "$#" -eq "0" ] || DISABLE=("$@")

    lk_echo_array "${DISABLE[@]}" | lk_console_list "Disabling in /etc/update-motd.d" "entry" "entries"

    for FILE in "${DISABLE[@]}"; do

        [ ! -x "/etc/update-motd.d/$FILE" ] || maybe_dryrun sudo chmod -v a-x "/etc/update-motd.d/$FILE"

    done

}

# load_linuxbrew [eval? (Y/n)] [echo? (y/N)]
function load_linuxbrew() {

    local SHELLENV

    [ -x "/home/linuxbrew/.linuxbrew/bin/brew" ] || return

    SHELLENV="$(/home/linuxbrew/.linuxbrew/bin/brew shellenv | grep -Ev '\b(PATH|MANPATH|INFOPATH)=' || exit "${PIPESTATUS[0]}")" || die

    SHELLENV="$SHELLENV
export PATH=\"\${PATH:+\$PATH:}/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin\";
export MANPATH=\"\${MANPATH:+\$MANPATH:}/home/linuxbrew/.linuxbrew/share/man:\";
export INFOPATH=\"\${INFOPATH:+\$INFOPATH:}/home/linuxbrew/.linuxbrew/share/info\";
$(declare -f brew_wrapper);
alias brew=brew_wrapper;"

    if [ "${1:-Y}" = "Y" ]; then

        shopt -s expand_aliases

        set +u
        eval "$SHELLENV"
        set -u

    fi

    if [ "${2:-N}" = "Y" ]; then

        echo "$SHELLENV"

    fi

}

function brew_wrapper() {
    (
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        /home/linuxbrew/.linuxbrew/bin/brew "$@"
    )
}
