#!/bin/bash
# shellcheck disable=SC2034,SC2206,SC2207
# Reviewed: 2019-11-04

function brew_check() {

    if is_macos; then

        check_developer_tools

    fi

    if ! command_exists brew; then

        if is_macos; then

            ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" || die

        elif is_linux; then

            load_linuxbrew || true

            command_exists brew || {
                sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)" || die
                load_linuxbrew || die "Unable to bootstrap Homebrew"
            }

        else

            die "Homebrew isn't supported on this platform"

        fi

    fi

}

function brew_check_taps() {

    local MISSING_TAPS TAP

    [ "${#BREW_TAPS[@]}" -gt "0" ] || return 0

    MISSING_TAPS=($(comm -23 <(printf '%s\n' "${BREW_TAPS[@]}" | sort | uniq) <(brew tap | sort | uniq)))

    if [ "${#MISSING_TAPS[@]}" -gt "0" ]; then

        console_message "Adding ${#MISSING_TAPS[@]} Homebrew $(single_or_plural "${#MISSING_TAPS[@]}" tap taps):" "${MISSING_TAPS[*]}" "$GREEN"

        for TAP in "${MISSING_TAPS[@]}"; do

            brew tap "$TAP" || die

        done

        [ "$BREW_CACHE_DIRTY" -ne "0" ] || brew_refresh

    fi

}

function brew_refresh() {

    BREW_INSTALLED_FORMULAE="$(brew list --full-name | sort | uniq)" || die
    BREW_AVAILABLE_FORMULAE="$(brew search | sort | uniq)" || die
    BREW_INSTALLED_CASKS=""
    BREW_AVAILABLE_CASKS=""

    if is_macos; then

        BREW_INSTALLED_CASKS="$(brew cask list | sort | uniq)" || die
        BREW_AVAILABLE_CASKS="$(brew search --casks | sort | uniq)" || die

    fi

}

function brew_formula_installed() {

    brew_make_cache_clean
    echo "$BREW_INSTALLED_FORMULAE" | grep -Fx "$1" >/dev/null 2>&1

}

function brew_cask_installed() {

    brew_make_cache_clean
    echo "$BREW_INSTALLED_CASKS" | grep -Fx "$1" >/dev/null 2>&1

}

function brew_formula_just_installed() {

    if [ "${#BREW_JUST_INSTALLED[@]}" -gt "0" ]; then

        printf '%s\n' "${BREW_JUST_INSTALLED[@]}" | grep -Fx "$1" >/dev/null 2>&1

    else

        false

    fi

}

function brew_formula_installed_or_queued() {

    if ! brew_formula_installed "$1"; then

        if [ "${#BREW_FORMULA_QUEUE[@]}" -gt "0" ]; then

            printf '%s\n' "${BREW_FORMULA_QUEUE[@]}" | grep -Fx "$1" >/dev/null 2>&1

        else

            false

        fi

    else

        true

    fi

}

function brew_formula_available() {

    brew_make_cache_clean
    echo "$BREW_AVAILABLE_FORMULAE" | grep -Fx "$1" >/dev/null 2>&1

}

function brew_mark_cache_clean() {

    [ "$BREW_CACHE_DIRTY" -eq "0" ] || { brew_refresh && BREW_CACHE_DIRTY=0; }

}

function brew_make_cache_clean() {

    if [ "$BREW_CACHE_DIRTY" -ne "0" ]; then

        console_message "Updating Homebrew formula and cask lists..." "" "$CYAN"

        brew update && brew_refresh && BREW_CACHE_DIRTY=0 || die

    fi

}

# Usage: brew_queue_formulae "Description of this group of formulae" "formula1 formula2 ..." [allow user override? (Y/n)]
function brew_queue_formulae() {

    brew_make_cache_clean

    install_or_queue "$1" "$2" "${3:-Y}" formula formulae BREW_INSTALLED_FORMULAE BREW_AVAILABLE_FORMULAE BREW_FORMULA_QUEUE BREW_INSTALLED

}

# Usage: brew_queue_casks "Description of this group of casks" "cask1 cask2 ..." [allow user override? (Y/n)]
function brew_queue_casks() {

    is_macos || return

    brew_make_cache_clean

    install_or_queue "$1" "$2" "${3:-Y}" cask casks BREW_INSTALLED_CASKS BREW_AVAILABLE_CASKS BREW_CASK_QUEUE BREW_INSTALLED

}

# Usage: brew_remove_formulae "formula1 formula2 ..."
function brew_remove_formulae() {

    local p

    # shellcheck disable=SC2048
    for p in $*; do

        if brew_formula_installed "$p" && ! in_array "$p" BREW_FORMULA_REMOVE_QUEUE; then

            BREW_FORMULA_REMOVE_QUEUE+=("$p")

        fi

    done

}

# Usage: brew_remove_casks "cask1 cask2 ..."
function brew_remove_casks() {

    local p

    # shellcheck disable=SC2048
    for p in $*; do

        if brew_cask_installed "$p" && ! in_array "$p" BREW_CASK_REMOVE_QUEUE; then

            BREW_CASK_REMOVE_QUEUE+=("$p")

        fi

    done

}

function brew_process_queue() {

    if [ "${#BREW_FORMULA_REMOVE_QUEUE[@]}" -gt "0" ]; then

        console_message "Removing ${#BREW_FORMULA_REMOVE_QUEUE[@]} $(single_or_plural "${#BREW_FORMULA_REMOVE_QUEUE[@]}" formula formulae):" "${BREW_FORMULA_REMOVE_QUEUE[*]}" "$BOLD" "$RED"

        brew uninstall "${BREW_FORMULA_REMOVE_QUEUE[@]}" &&
            BREW_FORMULA_REMOVE_QUEUE=() ||
            die

    fi

    if [ "${#BREW_CASK_REMOVE_QUEUE[@]}" -gt "0" ]; then

        console_message "Uninstalling ${#BREW_CASK_REMOVE_QUEUE[@]} $(single_or_plural "${#BREW_CASK_REMOVE_QUEUE[@]}" cask casks):" "${BREW_CASK_REMOVE_QUEUE[*]}" "$BOLD" "$RED"

        brew cask uninstall "${BREW_CASK_REMOVE_QUEUE[@]}" &&
            BREW_CASK_REMOVE_QUEUE=() ||
            die

    fi

    if [ "${#BREW_FORMULA_QUEUE[@]}" -gt "0" ]; then

        console_message "Installing ${#BREW_FORMULA_QUEUE[@]} $(single_or_plural "${#BREW_FORMULA_QUEUE[@]}" formula formulae):" "${BREW_FORMULA_QUEUE[*]}" "$GREEN"

        brew install "${BREW_FORMULA_QUEUE[@]}" && {
            BREW_INSTALLED+=("${BREW_FORMULA_QUEUE[@]}")
            BREW_JUST_INSTALLED+=("${BREW_FORMULA_QUEUE[@]}")
        } || die

    fi

    if [ "${#BREW_CASK_QUEUE[@]}" -gt "0" ]; then

        is_macos || return

        console_message "Installing ${#BREW_CASK_QUEUE[@]} $(single_or_plural "${#BREW_CASK_QUEUE[@]}" cask casks):" "${BREW_CASK_QUEUE[*]}" "$GREEN"

        brew cask install --no-quarantine --force "${BREW_CASK_QUEUE[@]}" && {
            BREW_INSTALLED+=("${BREW_CASK_QUEUE[@]}")
            BREW_JUST_INSTALLED+=("${BREW_CASK_QUEUE[@]}")
        } || die

    fi

    BREW_FORMULA_QUEUE=()
    BREW_CASK_QUEUE=()
    brew_refresh

}

function brew_upgrade_all() {

    brew_make_cache_clean

    console_message "Installing all available formula updates..." "" "$GREEN"

    brew upgrade || die "\"brew upgrade\" failed"

    if is_macos; then

        console_message "Installing all available cask updates..." "" "$GREEN"

        brew cask upgrade --no-quarantine || die "\"brew cask upgrade\" failed"

        # see https://github.com/Homebrew/brew/issues/6112
        rm -fv "$HOME/Library/Caches/Homebrew/Cask/adoptopenjdk8"* \
            "$HOME/Library/Caches/Homebrew/downloads/"*-OpenJDK8*

    fi

    brew cleanup || die "\"brew cleanup\" failed"

}

BREW_TAPS=()

if is_macos; then

    BREW_TAPS+=(
        homebrew/cask-drivers
        homebrew/cask-fonts
        homebrew/cask-versions
        adoptopenjdk/openjdk
        federico-terzi/espanso
        mongodb/brew
    )

fi

BREW_CACHE_DIRTY=1
BREW_FORMULA_QUEUE=()
BREW_CASK_QUEUE=()
BREW_FORMULA_REMOVE_QUEUE=()
BREW_CASK_REMOVE_QUEUE=()
BREW_INSTALLED=()
BREW_JUST_INSTALLED=()
